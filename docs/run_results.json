{"results": [{"node": {"raw_sql": "", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "raw_payments"], "unique_id": "seed.jaffle_shop.raw_payments", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "raw_payments.csv", "original_file_path": "data/raw_payments.csv", "name": "raw_payments", "resource_type": "seed", "alias": "raw_payments", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop/data/raw_payments.csv"}, "error": null, "status": null, "execution_time": 0.029634714126586914, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.474849Z", "completed_at": "2019-12-13T16:57:18.491812Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.498349Z", "completed_at": "2019-12-13T16:57:18.498366Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "raw_orders"], "unique_id": "seed.jaffle_shop.raw_orders", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "raw_orders.csv", "original_file_path": "data/raw_orders.csv", "name": "raw_orders", "resource_type": "seed", "alias": "raw_orders", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop/data/raw_orders.csv"}, "error": null, "status": null, "execution_time": 0.03027200698852539, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.474606Z", "completed_at": "2019-12-13T16:57:18.492697Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.498599Z", "completed_at": "2019-12-13T16:57:18.498604Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "raw_customers"], "unique_id": "seed.jaffle_shop.raw_customers", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "raw_customers.csv", "original_file_path": "data/raw_customers.csv", "name": "raw_customers", "resource_type": "seed", "alias": "raw_customers", "config": {"enabled": true, "materialized": "seed", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [], "sources": [], "depends_on": {"nodes": [], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": null, "compiled": true, "compiled_sql": "", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "", "wrapped_sql": "None", "seed_file_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop/data/raw_customers.csv"}, "error": null, "status": null, "execution_time": 0.029848098754882812, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.480432Z", "completed_at": "2019-12-13T16:57:18.498018Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.498827Z", "completed_at": "2019-12-13T16:57:18.498832Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "staging", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "staging/stg_orders.sql", "original_file_path": "models/staging/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_orders"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {"order_id": {"name": "order_id", "description": "", "data_type": null}, "status": {"name": "status", "description": "", "data_type": null}}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_orders.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.034632205963134766, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.502715Z", "completed_at": "2019-12-13T16:57:18.534500Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.535387Z", "completed_at": "2019-12-13T16:57:18.535398Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "staging", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "staging/stg_customers.sql", "original_file_path": "models/staging/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_customers"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {"customer_id": {"name": "customer_id", "description": "", "data_type": null}}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_customers.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.03450918197631836, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.502852Z", "completed_at": "2019-12-13T16:57:18.534900Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.535642Z", "completed_at": "2019-12-13T16:57:18.535649Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "staging", "stg_payments"], "unique_id": "model.jaffle_shop.stg_payments", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "staging/stg_payments.sql", "original_file_path": "models/staging/stg_payments.sql", "name": "stg_payments", "resource_type": "model", "alias": "stg_payments", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": ["staging", "hourly"]}, "tags": ["staging", "hourly"], "refs": [["raw_payments"]], "sources": [], "depends_on": {"nodes": ["seed.jaffle_shop.raw_payments"], "macros": []}, "docrefs": [], "description": "", "columns": {"payment_id": {"name": "payment_id", "description": "", "data_type": null}, "payment_method": {"name": "payment_method", "description": "", "data_type": null}}, "patch_path": "models/staging/schema.yml", "build_path": "target/compiled/jaffle_shop/staging/stg_payments.sql", "compiled": true, "compiled_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with source as (\n    select * from \"jaffle_shop\".\"dbt_alice\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.03619098663330078, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.509201Z", "completed_at": "2019-12-13T16:57:18.535149Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.535868Z", "completed_at": "2019-12-13T16:57:18.535873Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_orders"], "unique_id": "model.jaffle_shop.customer_orders", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "marts/core/intermediate/customer_orders.sql", "original_file_path": "models/marts/core/intermediate/customer_orders.sql", "name": "customer_orders", "resource_type": "model", "alias": "customer_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/customer_orders.sql", "compiled": true, "compiled_sql": "with orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.04138493537902832, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.539564Z", "completed_at": "2019-12-13T16:57:18.578646Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.578966Z", "completed_at": "2019-12-13T16:57:18.578976Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_orders'), column_name='order_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.04219388961791992, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.539831Z", "completed_at": "2019-12-13T16:57:18.579188Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.580197Z", "completed_at": "2019-12-13T16:57:18.580203Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_orders'), column_name='order_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\nwhere order_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\nwhere order_id is null\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.04294323921203613, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.539733Z", "completed_at": "2019-12-13T16:57:18.579788Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.580570Z", "completed_at": "2019-12-13T16:57:18.580574Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('stg_orders'), column_name='status', values=['placed', 'shipped', 'completed', 'return_pending', 'returned']) }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n", "column_name": "status", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status"}}}, "error": null, "status": null, "execution_time": 0.04342389106750488, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.539650Z", "completed_at": "2019-12-13T16:57:18.579972Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.580864Z", "completed_at": "2019-12-13T16:57:18.580869Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_customers'), column_name='customer_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\nwhere customer_id is null\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.034958839416503906, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.583348Z", "completed_at": "2019-12-13T16:57:18.598422Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.614674Z", "completed_at": "2019-12-13T16:57:18.614696Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_customers'), column_name='customer_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.036023855209350586, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.592301Z", "completed_at": "2019-12-13T16:57:18.616714Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.617802Z", "completed_at": "2019-12-13T16:57:18.617821Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "customer_payments"], "unique_id": "model.jaffle_shop.customer_payments", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "marts/core/intermediate/customer_payments.sql", "original_file_path": "models/marts/core/intermediate/customer_payments.sql", "name": "customer_payments", "resource_type": "model", "alias": "customer_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"], ["stg_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments", "model.jaffle_shop.stg_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/customer_payments.sql", "compiled": true, "compiled_sql": "with payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\norders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\nfinal as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.0361940860748291, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.592526Z", "completed_at": "2019-12-13T16:57:18.617349Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.618683Z", "completed_at": "2019-12-13T16:57:18.618688Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith payments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{payment_method}}' then amount else 0 end) as {{payment_method}}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "marts", "core", "intermediate", "order_payments"], "unique_id": "model.jaffle_shop.order_payments", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "marts/core/intermediate/order_payments.sql", "original_file_path": "models/marts/core/intermediate/order_payments.sql", "name": "order_payments", "resource_type": "model", "alias": "order_payments", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/marts/core/intermediate/order_payments.sql", "compiled": true, "compiled_sql": "\n\nwith payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\nfinal as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.036630868911743164, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.592705Z", "completed_at": "2019-12-13T16:57:18.618427Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.619315Z", "completed_at": "2019-12-13T16:57:18.619320Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('stg_payments'), column_name='payment_method', values=['credit_card', 'coupon', 'bank_transfer', 'gift_card']) }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"], "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "original_file_path": "models/staging/schema.yml", "name": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "resource_type": "test", "alias": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n", "column_name": "payment_method", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method"}}}, "error": null, "status": null, "execution_time": 0.03995513916015625, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.620078Z", "completed_at": "2019-12-13T16:57:18.631071Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.638956Z", "completed_at": "2019-12-13T16:57:18.638964Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('stg_payments'), column_name='payment_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "unique_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/unique_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_payments_payment_id", "resource_type": "test", "alias": "unique_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        payment_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "payment_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "payment_id"}}}, "error": null, "status": null, "execution_time": 0.030869007110595703, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.631332Z", "completed_at": "2019-12-13T16:57:18.658643Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.659527Z", "completed_at": "2019-12-13T16:57:18.659534Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('stg_payments'), column_name='payment_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_payments_payment_id"], "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_stg_payments_payment_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_payments_payment_id", "resource_type": "test", "alias": "not_null_stg_payments_payment_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["stg_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_payments"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_stg_payments_payment_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\nwhere payment_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\nwhere payment_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"stg_payments\"\nwhere payment_id is null\n", "column_name": "payment_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "payment_id"}}}, "error": null, "status": null, "execution_time": 0.0407712459564209, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.630859Z", "completed_at": "2019-12-13T16:57:18.659192Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.660452Z", "completed_at": "2019-12-13T16:57:18.660480Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\ncustomer_orders as (\n\n    select * from {{ ref('customer_orders') }}\n\n),\n\ncustomer_payments as (\n\n    select * from {{ ref('customer_payments') }}\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "marts", "core", "dim_customers"], "unique_id": "model.jaffle_shop.dim_customers", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "marts/core/dim_customers.sql", "original_file_path": "models/marts/core/dim_customers.sql", "name": "dim_customers", "resource_type": "model", "alias": "dim_customers", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_customers"], ["customer_orders"], ["customer_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.customer_orders", "model.jaffle_shop.customer_payments"], "macros": []}, "docrefs": [], "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "columns": {"customer_id": {"name": "customer_id", "description": "This is a unique identifier for a customer", "data_type": null}, "first_name": {"name": "first_name", "description": "Customer's first name. PII.", "data_type": null}, "last_name": {"name": "last_name", "description": "Customer's last name. PII.", "data_type": null}, "email": {"name": "email", "description": "Customer's email address. PII.", "data_type": null}, "first_order": {"name": "first_order", "description": "Date (UTC) of a customer's first order", "data_type": null}, "most_recent_order": {"name": "most_recent_order", "description": "Date (UTC) of a customer's most recent order", "data_type": null}, "number_of_orders": {"name": "number_of_orders", "description": "Count of the number of orders a customer has placed", "data_type": null}, "total_order_amount": {"name": "total_order_amount", "description": "Total value (AUD) of a customer's orders", "data_type": null}}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/marts/core/dim_customers.sql", "compiled": true, "compiled_sql": "with customers as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_customers\"\n\n),\n\ncustomer_orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"customer_orders\"\n\n),\n\ncustomer_payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"customer_payments\"\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.03153634071350098, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.637799Z", "completed_at": "2019-12-13T16:57:18.660216Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.661117Z", "completed_at": "2019-12-13T16:57:18.661134Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\norder_payments as (\n\n    select * from {{ ref('order_payments') }}\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{payment_method}}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "marts", "core", "fct_orders"], "unique_id": "model.jaffle_shop.fct_orders", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "marts/core/fct_orders.sql", "original_file_path": "models/marts/core/fct_orders.sql", "name": "fct_orders", "resource_type": "model", "alias": "fct_orders", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": []}, "tags": [], "refs": [["stg_orders"], ["order_payments"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.stg_orders", "model.jaffle_shop.order_payments"], "macros": []}, "docrefs": [{"documentation_name": "orders_status", "documentation_package": "", "column_name": "status"}], "description": "This table has basic information about orders, as well as some derived facts based on payments", "columns": {"order_id": {"name": "order_id", "description": "This is a unique identifier for an order", "data_type": null}, "customer_id": {"name": "customer_id", "description": "Foreign key to the customers table", "data_type": null}, "order_date": {"name": "order_date", "description": "Date (UTC) that the order was placed", "data_type": null}, "status": {"name": "status", "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |", "data_type": null}, "amount": {"name": "amount", "description": "Total amount (AUD) of the order", "data_type": null}, "credit_card_amount": {"name": "credit_card_amount", "description": "Amount of the order (AUD) paid for by credit card", "data_type": null}, "coupon_amount": {"name": "coupon_amount", "description": "Amount of the order (AUD) paid for by coupon", "data_type": null}, "bank_transfer_amount": {"name": "bank_transfer_amount", "description": "Amount of the order (AUD) paid for by bank transfer", "data_type": null}, "gift_card_amount": {"name": "gift_card_amount", "description": "Amount of the order (AUD) paid for by gift card", "data_type": null}}, "patch_path": "models/marts/core/schema.yml", "build_path": "target/compiled/jaffle_shop/marts/core/fct_orders.sql", "compiled": true, "compiled_sql": "\n\nwith orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith orders as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"stg_orders\"\n\n),\n\norder_payments as (\n\n    select * from \"jaffle_shop\".\"dbt_alice\".\"order_payments\"\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final", "wrapped_sql": "None"}, "error": null, "status": null, "execution_time": 0.0361483097076416, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.661776Z", "completed_at": "2019-12-13T16:57:18.685594Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.686065Z", "completed_at": "2019-12-13T16:57:18.686077Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('dim_customers'), column_name='customer_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_dim_customers_customer_id", "resource_type": "test", "alias": "not_null_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.dim_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\nwhere customer_id is null\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.020126819610595703, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.677090Z", "completed_at": "2019-12-13T16:57:18.686324Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.696193Z", "completed_at": "2019-12-13T16:57:18.696199Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('dim_customers'), column_name='customer_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "unique_dim_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_dim_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/unique_dim_customers_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_dim_customers_customer_id", "resource_type": "test", "alias": "unique_dim_customers_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["dim_customers"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.dim_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_dim_customers_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        customer_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.030959129333496094, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.685881Z", "completed_at": "2019-12-13T16:57:18.714424Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.715256Z", "completed_at": "2019-12-13T16:57:18.715265Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='amount') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_amount", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_amount", "resource_type": "test", "alias": "not_null_fct_orders_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere amount is null\n", "column_name": "amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "amount"}}}, "error": null, "status": null, "execution_time": 0.021709918975830078, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.703809Z", "completed_at": "2019-12-13T16:57:18.716122Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.724276Z", "completed_at": "2019-12-13T16:57:18.724284Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(model=ref('fct_orders'), column_name='status', values=['placed', 'shipped', 'completed', 'return_pending', 'returned']) }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/marts/core/schema.yml", "name": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_fct_orders_status__placed__shipped__completed__return_pending__returned", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/accepted_values_fct_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n\n", "wrapped_sql": "\n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*)\nfrom validation_errors\n", "column_name": "status", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status"}}}, "error": null, "status": null, "execution_time": 0.0280759334564209, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.697845Z", "completed_at": "2019-12-13T16:57:18.716375Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.724520Z", "completed_at": "2019-12-13T16:57:18.724524Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='bank_transfer_amount') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_bank_transfer_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_bank_transfer_amount", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_bank_transfer_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_bank_transfer_amount", "resource_type": "test", "alias": "not_null_fct_orders_bank_transfer_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_bank_transfer_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere bank_transfer_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere bank_transfer_amount is null\n", "column_name": "bank_transfer_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "bank_transfer_amount"}}}, "error": null, "status": null, "execution_time": 0.021222829818725586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.716051Z", "completed_at": "2019-12-13T16:57:18.726491Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.735154Z", "completed_at": "2019-12-13T16:57:18.735164Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='coupon_amount') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_coupon_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_coupon_amount", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_coupon_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_coupon_amount", "resource_type": "test", "alias": "not_null_fct_orders_coupon_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_coupon_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere coupon_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere coupon_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere coupon_amount is null\n", "column_name": "coupon_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "coupon_amount"}}}, "error": null, "status": null, "execution_time": 0.028771638870239258, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.726415Z", "completed_at": "2019-12-13T16:57:18.736365Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.752113Z", "completed_at": "2019-12-13T16:57:18.752131Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='credit_card_amount') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_credit_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_credit_card_amount", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_credit_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_credit_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_credit_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_credit_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere credit_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere credit_card_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere credit_card_amount is null\n", "column_name": "credit_card_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "credit_card_amount"}}}, "error": null, "status": null, "execution_time": 0.03860187530517578, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.736069Z", "completed_at": "2019-12-13T16:57:18.754212Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.755702Z", "completed_at": "2019-12-13T16:57:18.755715Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='customer_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_customer_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_customer_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_customer_id", "resource_type": "test", "alias": "not_null_fct_orders_customer_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_customer_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere customer_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere customer_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere customer_id is null\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.03884410858154297, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.736221Z", "completed_at": "2019-12-13T16:57:18.754863Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.764709Z", "completed_at": "2019-12-13T16:57:18.764723Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='gift_card_amount') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_gift_card_amount"], "unique_id": "test.jaffle_shop.not_null_fct_orders_gift_card_amount", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_gift_card_amount.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_gift_card_amount", "resource_type": "test", "alias": "not_null_fct_orders_gift_card_amount", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_gift_card_amount.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere gift_card_amount is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere gift_card_amount is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere gift_card_amount is null\n", "column_name": "gift_card_amount", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "gift_card_amount"}}}, "error": null, "status": null, "execution_time": 0.024626970291137695, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.754716Z", "completed_at": "2019-12-13T16:57:18.766580Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.776248Z", "completed_at": "2019-12-13T16:57:18.776259Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(model=ref('fct_orders'), column_name='order_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "not_null_fct_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/not_null_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "not_null_fct_orders_order_id", "resource_type": "test", "alias": "not_null_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/not_null_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere order_id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere order_id is null\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\nwhere order_id is null\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.0411989688873291, "thread_id": "Thread-3", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.766123Z", "completed_at": "2019-12-13T16:57:18.777526Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.778175Z", "completed_at": "2019-12-13T16:57:18.778181Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(model=ref('fct_orders'), column_name='order_id') }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "unique_fct_orders_order_id"], "unique_id": "test.jaffle_shop.unique_fct_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/unique_fct_orders_order_id.sql", "original_file_path": "models/marts/core/schema.yml", "name": "unique_fct_orders_order_id", "resource_type": "test", "alias": "unique_fct_orders_order_id", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/unique_fct_orders_order_id.sql", "compiled": true, "compiled_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n", "wrapped_sql": "\n\n\n\nselect count(*)\nfrom (\n\n    select\n        order_id\n\n    from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n", "column_name": "order_id", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id"}}}, "error": null, "status": null, "execution_time": 0.02104806900024414, "thread_id": "Thread-4", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.778031Z", "completed_at": "2019-12-13T16:57:18.797003Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.797259Z", "completed_at": "2019-12-13T16:57:18.797265Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(model=ref('fct_orders'), column_name='customer_id', field='customer_id', to=ref('dim_customers')) }}", "database": "jaffle_shop", "schema": "dbt_alice", "fqn": ["jaffle_shop", "schema_test", "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_"], "unique_id": "test.jaffle_shop.relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "package_name": "jaffle_shop", "root_path": "/Users/tharwanin/Desktop/mintbireporting/dbt/jaffle_shop", "path": "schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "original_file_path": "models/marts/core/schema.yml", "name": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "resource_type": "test", "alias": "relationships_fct_orders_customer_id__customer_id__ref_dim_customers_", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "tags": [], "severity": "ERROR"}, "tags": ["schema"], "refs": [["fct_orders"], ["dim_customers"]], "sources": [], "depends_on": {"nodes": ["model.jaffle_shop.fct_orders", "model.jaffle_shop.dim_customers"], "macros": []}, "docrefs": [], "description": "", "columns": {}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/schema_test/relationships_fct_orders_535c445ac9111d4713c286f097da3132.sql", "compiled": true, "compiled_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n", "wrapped_sql": "\n\n\n\n\nselect count(*)\nfrom (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"fct_orders\"\n) as child\nleft join (\n    select customer_id as id from \"jaffle_shop\".\"dbt_alice\".\"dim_customers\"\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n", "column_name": "customer_id", "test_metadata": {"namespace": null, "name": "relationships", "kwargs": {"to": "ref('dim_customers')", "field": "customer_id", "column_name": "customer_id"}}}, "error": null, "status": null, "execution_time": 0.0225522518157959, "thread_id": "Thread-2", "timing": [{"name": "compile", "started_at": "2019-12-13T16:57:18.777770Z", "completed_at": "2019-12-13T16:57:18.797785Z"}, {"name": "execute", "started_at": "2019-12-13T16:57:18.798005Z", "completed_at": "2019-12-13T16:57:18.798010Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2019-12-13T16:57:18.885945Z", "elapsed_time": 0.41832900047302246}